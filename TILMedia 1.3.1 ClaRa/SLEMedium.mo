within TILMedia;
model SLEMedium
  "Medium with solid-liquid equilibrium (SLE), with h and p as independent variables"

  replaceable model SLEMediumType = TILMedia.SLEMediumTypes.BaseSLEMedium constrainedby
    TILMedia.SLEMediumTypes.BaseSLEMedium "Type of the SLE medium"
    annotation(choicesAllMatching=true);

  input Modelica.SIunits.SpecificEnthalpy h "Specific enthalpy" annotation(Dialog);
  Modelica.SIunits.Density d "Density";
  input Modelica.SIunits.AbsolutePressure p "Pressure" annotation(Dialog);
  input Modelica.SIunits.MassFraction iota = 0 "metastable state transition [0,1]" annotation(Dialog);
  Modelica.SIunits.Temperature T "Temperature";
  Modelica.SIunits.SpecificHeatCapacity cp "Specific heat capacity";
  Modelica.SIunits.MassFraction q "Liquid mass fraction";
  Modelica.SIunits.ThermalConductivity lambda "Thermal conductivity";
  SI.SpecificEnthalpy h_fusion = sleMedium.h_fusion;
  constant SI.Temperature TStableLimit = sleMedium.TStableLimit
    "Above this temperature all cristals in the solution are dissolved. Metastable states are possible after exceeding this temperature.";
  constant SI.Temperature TSupercoolingLimit(min=-Modelica.Constants.inf) = sleMedium.TSupercoolingLimit
    "There is no metastable state below this temperature. Crystallization starts when this temperature is reached.";

  function density_h = TILMedia.Internals.SLEMediumFunctions.density_h(d_s = sleMedium.d_s, d_l = sleMedium.d_l, h_fusion = sleMedium.h_fusion);
  function specificEnthalpy_T =
      TILMedia.Internals.SLEMediumFunctions.specificEnthalpy_T (                         TSupercoolingLimit = sleMedium.TSupercoolingLimit, cp_s = sleMedium.cp_s, cp_l = sleMedium.cp_l, T_s = sleMedium.T_s, T_l = sleMedium.T_l, h_fusion = sleMedium.h_fusion);
protected
  SLEMediumType sleMedium(T=T);
equation
  q = TILMedia.Internals.SLEMediumFunctions.quality_h(h, iota, sleMedium.cp_s, sleMedium.cp_l, sleMedium.h_fusion, sleMedium.T_s, sleMedium.T_l);
  T = TILMedia.Internals.SLEMediumFunctions.temperature_h(h, iota, sleMedium.cp_s, sleMedium.cp_l, sleMedium.h_fusion, sleMedium.T_s, sleMedium.T_l);

  cp = sleMedium.cp_s + (sleMedium.cp_l - sleMedium.cp_s)*q;
  1/d = 1/sleMedium.d_s + (1/sleMedium.d_l - 1/sleMedium.d_s)*q;
  lambda = sleMedium.lambda_s + (sleMedium.lambda_l - sleMedium.lambda_s)*q;

  annotation (Icon(graphics={Text(
          extent={{-120,-60},{120,-100}},
          lineColor={204,0,0},
          textString=
               "%name"), Bitmap(extent={{-100,-100},{100,100}},
          imageSource=
              "",
          fileName="modelica://TILMedia/Images/SLE_h.png")}),
          defaultComponentName="sleMedium",
  __Dymola_Protection(
      allowDuplicate = true,
      showDiagram=true,
      showText=true),
          Documentation(info="<html>
                   <p>
                   The SLE medium model calculates the thermophysical property data with given input: pressure (p), enthalpy (h), meta stable (iota) and the parameter sleMediumType.<br>
                   The interface and the way of using, is demonstrated in the Testers -> <a href=\"Modelica:TILMedia.Testers.TestSLEMedium\">TestSLEMedium</a>.
                   </p>
                   <hr>
                   </html>"));
end SLEMedium;
