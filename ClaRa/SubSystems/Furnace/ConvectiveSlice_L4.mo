within ClaRa.SubSystems.Furnace;
model ConvectiveSlice_L4 "Convective furnaces slice"

//__________________________________________________________________________//
// Component of the ClaRa library, version: 1.8.0                           //
//                                                                          //
// Licensed by the ClaRa development team under the 3-clause BSD License.   //
// Copyright  2013-2022, ClaRa development team.                            //
//                                                                          //
// The ClaRa development team consists of the following partners:           //
// TLK-Thermo GmbH (Braunschweig, Germany),                                 //
// XRG Simulation GmbH (Hamburg, Germany).                                  //
//__________________________________________________________________________//
// Contents published in ClaRa have been contributed by different authors   //
// and institutions. Please see model documentation for detailed information//
// on original authorship and copyrights.                                   //
//__________________________________________________________________________//

  extends ClaRa.Basics.Icons.FurnaceSlice;
  import rad2deg = Modelica.Units.Conversions.from_deg;
  outer ClaRa.SimCenter simCenter;

  //Furnace
  parameter ClaRa.Basics.Media.FuelTypes.BaseFuel fuelModel=simCenter.fuelModel1 "Fuel definition" annotation (choicesAllMatching, Dialog(group="Media Definitions"));
  parameter TILMedia.GasTypes.BaseGas flueGas=simCenter.flueGasModel "Flue gas model" annotation (choicesAllMatching, Dialog(group="Media Definitions", groupImage="modelica://ClaRa/Resources/Images/ParameterDialog/FurnaceSketch.png"));
  parameter ClaRa.Basics.Media.Slag.PartialSlag slagType=simCenter.slagModel "Slag properties" annotation (choices(choice=simCenter.slagModel "Slag model 1 as defined in simCenter"),Dialog(group="Media Definitions"));

  replaceable model GasHeatTransfer_TubeBundle = ClaRa.Basics.ControlVolumes.Fundamentals.HeatTransport.Gas_HT.Convection.Convection_tubeBank_L2 constrainedby ClaRa.Basics.ControlVolumes.Fundamentals.HeatTransport.HeatTransferBaseGas "HT from Gas to TB" annotation (choicesAllMatching, Dialog(group="Fundamental Definitions"));
  replaceable model GasHeatTransfer_Wall = ClaRa.Basics.ControlVolumes.Fundamentals.HeatTransport.Gas_HT.Convection.Convection_flatWall_L2 constrainedby ClaRa.Basics.ControlVolumes.Fundamentals.HeatTransport.HeatTransferBaseGas "HT from Gas to FTW" annotation (choicesAllMatching, Dialog(group="Fundamental Definitions"));
  replaceable model GasHeatTransfer_CarrierTubes = ClaRa.Basics.ControlVolumes.Fundamentals.HeatTransport.Gas_HT.Convection.Convection_carrierTubes_turbulent_L2 constrainedby ClaRa.Basics.ControlVolumes.Fundamentals.HeatTransport.HeatTransferBaseGas "HT from Gas to top" annotation (choicesAllMatching, Dialog(group="Fundamental Definitions"));

  replaceable model GasHeatTransfer_Top = ClaRa.Basics.ControlVolumes.Fundamentals.HeatTransport.Generic_HT.Adiabat_L2 constrainedby ClaRa.Basics.ControlVolumes.Fundamentals.HeatTransport.HeatTransferBaseGas "HT from Gas to CT" annotation (choicesAllMatching, Dialog(group="Fundamental Definitions"));

  replaceable model GasPressureLoss = ClaRa.Basics.ControlVolumes.Fundamentals.PressureLoss.Generic_PL.LinearPressureLoss_L2 constrainedby ClaRa.Basics.ControlVolumes.Fundamentals.PressureLoss.PressureLossBaseGas_L2 "Gas pressure loss" annotation (choicesAllMatching, Dialog(group="Fundamental Definitions"));

  replaceable model Burning_time = ClaRa.Components.Furnace.GeneralTransportPhenomena.BurningTime.ConstantBurningTime
    constrainedby ClaRa.Components.Furnace.GeneralTransportPhenomena.BurningTime.PartialBurningTime "Model for the buring time"
                                annotation (Dialog(tab="Combustion Settings",group="Combustion"),choicesAllMatching=true);
  replaceable model ParticleMigration = ClaRa.Components.Furnace.GeneralTransportPhenomena.ParticleMigration.FixedMigrationSpeed_simple (w_fixed=10)
    constrainedby ClaRa.Components.Furnace.GeneralTransportPhenomena.ParticleMigration.PartialMigrationSpeed "Model for the particle migration speed"
                                             annotation (Dialog(tab="Combustion Settings",group="Combustion"), choicesAllMatching=true);
  replaceable model ReactionZone = ClaRa.Components.Furnace.ChemicalReactions.CoalReactionZone
     constrainedby ClaRa.Components.Furnace.ChemicalReactions.PartialReactionZone "Model to regard chemical reactions"
                                          annotation (Dialog(tab="Combustion Settings",group="Combustion"), choicesAllMatching=true);

  parameter ClaRa.Basics.Units.Length length_furnace=10 "Length of the component" annotation (Dialog(group="Geometry", groupImage="modelica://ClaRa/Resources/Images/ParameterDialog/HollowBlock.png"));
  parameter ClaRa.Basics.Units.Length width_furnace=length_furnace "Width of the component" annotation (Dialog(group="Geometry"));
  parameter ClaRa.Basics.Units.Length z_in_furnace=0 "Height of inlet ports" annotation (Dialog(tab="General", group="Geometry"));
  parameter ClaRa.Basics.Units.Length z_out_furnace=1 "Height of outlet ports" annotation (Dialog(tab="General", group="Geometry"));
  parameter ClaRa.Basics.Choices.GeometryOrientation flowOrientation_furnace=ClaRa.Basics.Choices.GeometryOrientation.vertical "Orientation of shell side flow" annotation (Dialog(group="Geometry"));

  parameter ClaRa.Basics.Units.Pressure p_start_flueGas_out=1e5 "Start pressure at outlet" annotation (Dialog(tab="Initialisation"));
  parameter ClaRa.Basics.Units.Temperature T_start_flueGas_out=700 "Start temperature at outlet" annotation (Dialog(tab="Initialisation"));
  parameter Modelica.Units.SI.Temperature T_top_initial=flameRoom.T_start_flueGas_out "Initial temperature of top volume" annotation (Dialog(tab="Initialisation"));
  parameter ClaRa.Basics.Units.MassFraction xi_start_flueGas_out[flueGas.nc - 1]=flueGas.xi_default "Start composition of flue gas" annotation (Dialog(tab="Initialisation"));

  parameter Modelica.Units.SI.MassFlowRate m_flow_nom_gas=1000 "Nominal mass flow rates at inlet" annotation (Dialog(group="Nominal Values"));

  parameter Integer slagTemperature_calculationType=1 "Calculation type of outflowing slag temperature" annotation (Dialog(tab="Combustion Settings", group="Slag Definitions"), choices(
      choice=1 "Fixed slag temperature",
      choice=2 "Outlet flue gas temperature",
      choice=3 "Mean flue gas temperature",
      choice=4 "Inlet flue gas temperature"));
  parameter ClaRa.Basics.Units.Temperature T_slag=900 "Constant slag outlet temperature" annotation (Dialog(tab="Combustion Settings", group="Slag Definitions"));

// Finned Tube Walls (FTW)///
  parameter Boolean FTWisCooled = true "True if finned walls are cooled (else omitted)" annotation (choices(checkBox=true), Dialog(tab="Finned Tube Walls (FTW)", group="Fundamental Definitions"));
  parameter TILMedia.VLEFluidTypes.BaseVLEFluid medium_FTW = simCenter.fluid1 "FTW medium model" annotation (choicesAllMatching, Dialog(enable = FTWisCooled, tab="Finned Tube Walls (FTW)", group="Fundamental Definitions",groupImage="modelica://ClaRa/Resources/Images/ParameterDialog/FinnedWallSketch.png"));
  replaceable model Material_FTW = Basics.Media.Solids.Steel16Mo3 constrainedby TILMedia.SolidTypes.BaseSolid  "FTW material" annotation (choicesAllMatching, Dialog(enable = FTWisCooled, tab="Finned Tube Walls (FTW)", group="Fundamental Definitions"));
  parameter Boolean frictionAtInlet_FTW = false "True if pressure loss at inlet" annotation (choices(checkBox=true), Dialog(enable = FTWisCooled, tab="Finned Tube Walls (FTW)", group="Fundamental Definitions"));
  parameter Boolean frictionAtOutlet_FTW = false "True if pressure loss at outlet" annotation (choices(checkBox=true), Dialog(enable = FTWisCooled, tab="Finned Tube Walls (FTW)", group="Fundamental Definitions"));
  replaceable model PressureLoss_FTW = ClaRa.Basics.ControlVolumes.Fundamentals.PressureLoss.Generic_PL.LinearPressureLoss_L4 constrainedby ClaRa.Basics.ControlVolumes.Fundamentals.PressureLoss.PressureLossBaseVLE_L4 "Pressure loss model" annotation (Dialog(enable = FTWisCooled, tab="Finned Tube Walls (FTW)", group="Fundamental Definitions"), choicesAllMatching=true);
  replaceable model HeatTransfer_FTW = ClaRa.Basics.ControlVolumes.Fundamentals.HeatTransport.Generic_HT.CharLine_L4 constrainedby ClaRa.Basics.ControlVolumes.Fundamentals.HeatTransport.HeatTransferBaseVLE_L4 "Heat Transfer Model" annotation (Dialog(enable = FTWisCooled, tab="Finned Tube Walls (FTW)", group="Fundamental Definitions"), choicesAllMatching=true);
  replaceable model MechanicalEquilibrium_FTW = ClaRa.Basics.ControlVolumes.Fundamentals.SpacialDistribution.Homogeneous_L4 constrainedby ClaRa.Basics.ControlVolumes.Fundamentals.SpacialDistribution.MechanicalEquilibrium_L4 "Mechanic flow model" annotation (Dialog(tab="Finned Tube Walls (FTW)", group="Fundamental Definitions"), choicesAllMatching=true);
  parameter Modelica.Units.NonSI.Angle_deg psi_FTW=23 "Inclination of pipes" annotation (Dialog(
      enable=FTWisCooled,
      tab="Finned Tube Walls (FTW)",
      group="Geometry"));
  parameter ClaRa.Basics.Units.Length length_FTW=abs(z_out_furnace - z_in_furnace)/sin(rad2deg(psi_FTW)) "Length of the pipe" annotation (Dialog(enable = FTWisCooled, tab="Finned Tube Walls (FTW)", group="Geometry"));
  parameter ClaRa.Basics.Units.Length diameter_o_FTW=57e-3 "Outer diameter" annotation (Dialog(enable = FTWisCooled, tab="Finned Tube Walls (FTW)", group="Geometry"));
  parameter ClaRa.Basics.Units.Length diameter_i_FTW=49e-3 "Inner diameter of the pipe" annotation (Dialog(enable = FTWisCooled, tab="Finned Tube Walls (FTW)", group="Geometry"));
  parameter ClaRa.Basics.Units.Length z_in_FTW = z_in_furnace "Height of inlet above ground" annotation (Dialog(enable = FTWisCooled, tab="Finned Tube Walls (FTW)", group = "Geometry"));
  parameter ClaRa.Basics.Units.Length z_out_FTW = z_out_furnace "Height of outlet above ground" annotation (Dialog(enable = FTWisCooled, tab="Finned Tube Walls (FTW)", group = "Geometry"));
  parameter Integer N_tubes_FTW=1050 "Number Of parallel pipes" annotation (Dialog(enable = FTWisCooled, tab="Finned Tube Walls (FTW)", group="Geometry"));
  final parameter Integer N_passes_FTW=1 "Number of passes of the tubes" annotation (Dialog(enable = FTWisCooled, tab="Finned Tube Walls (FTW)", group="Geometry"));
  parameter Integer N_cv_FTW=3 "Number of finite volumes" annotation (Dialog(enable = FTWisCooled, tab="Finned Tube Walls (FTW)",group="Discretisation"));
  parameter ClaRa.Basics.Units.Length Delta_x_FTW[N_cv_FTW]=ClaRa.Basics.Functions.GenerateGrid(
      {0},
      length_FTW,
      N_cv_FTW) "Discretisation scheme" annotation (Dialog(enable = FTWisCooled, tab="Finned Tube Walls (FTW)",group="Discretisation"));
  parameter Integer initOption_FTW=0 "Type of initialisation" annotation (Dialog(enable = FTWisCooled, tab="Finned Tube Walls (FTW)", group="Initialisation"), choices(choice = 0 "Use guess values", choice = 208 "Steady pressure and enthalpy", choice=201 "Steady pressure", choice = 202 "Steady enthalpy"));
  parameter ClaRa.Basics.Units.EnthalpyMassSpecific h_start_FTW[N_cv_FTW]=ones(N_cv_FTW)*800e3 "Initial specific enthalpy for single tube" annotation (Dialog(enable = FTWisCooled, tab="Finned Tube Walls (FTW)", group="Initialisation"));
  parameter ClaRa.Basics.Units.Pressure p_start_FTW[N_cv_FTW]=ones(N_cv_FTW)*1e5 "Initial pressure" annotation (Dialog(enable = FTWisCooled, tab="Finned Tube Walls (FTW)", group="Initialisation"));
  parameter ClaRa.Basics.Units.MassFraction xi_start_FTW[medium_FTW.nc - 1]=zeros(medium_FTW.nc - 1) "Initial composition" annotation (Dialog(enable = FTWisCooled, tab="Finned Tube Walls (FTW)", group="Initialisation"));
  parameter ClaRa.Basics.Units.EnthalpyMassSpecific h_nom_FTW[N_cv_FTW]=ones(N_cv_FTW)*1e5 "Nominal specific enthalpy for single tube" annotation (Dialog(tab="Finned Tube Walls (FTW)", group="Nominal Values"));
  parameter ClaRa.Basics.Units.Pressure p_nom_FTW[N_cv_FTW]=ones(N_cv_FTW)*1e5 "Nominal pressure" annotation (Dialog(tab="Finned Tube Walls (FTW)", group="Nominal Values"));
  parameter ClaRa.Basics.Units.MassFlowRate m_flow_nom_FTW=100 "Nominal mass flow w.r.t. all parallel tubes" annotation (Dialog(tab="Finned Tube Walls (FTW)", group="Nominal Values"));
  parameter ClaRa.Basics.Units.PressureDifference Delta_p_nom_FTW=1e4 "Nominal pressure loss w.r.t. all parallel tubes" annotation (Dialog(tab="Finned Tube Walls (FTW)", group="Nominal Values"));

/// TUbeBundle///
  parameter TILMedia.VLEFluidTypes.BaseVLEFluid medium_TB=simCenter.fluid1 "TB medium model" annotation (choicesAllMatching, Dialog(tab="Tube Bundle (TB)", group="Fundamental Definitions",groupImage="modelica://ClaRa/Resources/Images/ParameterDialog/TubeBundleSketch.png"));
  replaceable model Material_TB = Basics.Media.Solids.Steel16Mo3 constrainedby TILMedia.SolidTypes.BaseSolid  "TB material" annotation (choicesAllMatching, Dialog(tab="Tube Bundle (TB)", group="Fundamental Definitions"));
  parameter Boolean frictionAtInlet_TB=false "True if pressure loss at intlet" annotation (choices(checkBox=true), Dialog(tab="Tube Bundle (TB)", group="Fundamental Definitions"));
  parameter Boolean frictionAtOutlet_TB=false "True if pressure loss at outlet" annotation (choices(checkBox=true), Dialog(tab="Tube Bundle (TB)", group="Fundamental Definitions"));
  replaceable model PressureLoss_TB = ClaRa.Basics.ControlVolumes.Fundamentals.PressureLoss.Generic_PL.LinearPressureLoss_L4 constrainedby ClaRa.Basics.ControlVolumes.Fundamentals.PressureLoss.PressureLossBaseVLE_L4 "Pressure loss model" annotation (Dialog(tab="Tube Bundle (TB)", group="Fundamental Definitions"), choicesAllMatching=true);
  replaceable model HeatTransfer_TB = ClaRa.Basics.ControlVolumes.Fundamentals.HeatTransport.Generic_HT.CharLine_L4 constrainedby ClaRa.Basics.ControlVolumes.Fundamentals.HeatTransport.HeatTransferBaseVLE_L4 "Heat transfer model" annotation (Dialog(tab="Tube Bundle (TB)", group="Fundamental Definitions"), choicesAllMatching=true);
  replaceable model MechanicalEquilibrium_TB = ClaRa.Basics.ControlVolumes.Fundamentals.SpacialDistribution.Homogeneous_L4 constrainedby ClaRa.Basics.ControlVolumes.Fundamentals.SpacialDistribution.MechanicalEquilibrium_L4 "Mechanic flow model" annotation (Dialog(tab="Tube Bundle (TB)", group="Fundamental Definitions"), choicesAllMatching=true);

  parameter ClaRa.Basics.Units.Length length_TB=length_furnace "Length of the pipe (one pass)" annotation (Dialog(tab="Tube Bundle (TB)", group="Geometry"));
  parameter ClaRa.Basics.Units.Length diameter_o_TB=0.06 "Outer diameter of the pipe" annotation (Dialog(tab="Tube Bundle (TB)", group="Geometry"));
  parameter ClaRa.Basics.Units.Length diameter_i_TB=0.05 "Inner diameter of the pipe" annotation (Dialog(tab="Tube Bundle (TB)", group="Geometry"));
  parameter ClaRa.Basics.Units.Length z_in_TB=z_out_furnace "Height of inlet above ground" annotation (Dialog(tab="Tube Bundle (TB)", group="Geometry"));
  parameter ClaRa.Basics.Units.Length z_out_TB=z_in_furnace "Height of outlet above ground" annotation (Dialog(tab="Tube Bundle (TB)", group="Geometry"));
  parameter Integer N_tubes_TB=800 "Number Of parallel pipes" annotation (Dialog(tab="Tube Bundle (TB)", group="Geometry"));
  parameter Integer N_passes_TB=1 "Number of passes of the tubes" annotation (Dialog(tab="Tube Bundle (TB)", group="Geometry"));
  parameter ClaRa.Basics.Units.Length Delta_z_par=1.5*diameter_o_TB "Distance between tubes parallel to flow direction" annotation (Dialog(tab="Tube Bundle (TB)", group="Geometry"));
  parameter ClaRa.Basics.Units.Length Delta_z_ort=1.5*diameter_o_TB "Distance between tubes orthogonal to flow direction" annotation (Dialog(tab="Tube Bundle (TB)", group="Geometry"));
  parameter Boolean staggeredAlignment=true "True, if the tubes are aligned staggeredly, false otherwise" annotation (Dialog(tab="Tube Bundle (TB)", group="Geometry"));
  parameter Integer N_rows_TB=integer((N_tubes_TB/integer(width_furnace/Delta_z_ort))*N_passes_TB) "Number of pipe rows in flow direction (minimum = N_passes)" annotation (Dialog(tab="Tube Bundle (TB)", group="Geometry"));
      parameter Integer tubeOrientation_TB=0 "Tube orientation" annotation (Dialog(tab="Tube Bundle (TB)", group="Geometry"), choices(
      choice=0 "Lengthwise",
      choice=1 "Widthwise",
      choice=2 "Heightwise"));
  parameter Integer N_cv_TB=3 "Number of finite volumes" annotation (Dialog(tab="Tube Bundle (TB)", group="Discretisation"));
  parameter ClaRa.Basics.Units.Length Delta_x_TB[N_cv_TB]=ClaRa.Basics.Functions.GenerateGrid(
      {0},
      length_TB*N_passes_TB,
      N_cv_TB) "Discretisation scheme" annotation (Dialog(tab="Tube Bundle (TB)", group="Discretisation"));
  parameter Integer initOption_TB=0 "Type of initialisation" annotation (Dialog(tab="Tube Bundle (TB)", group="Initialisation"), choices(choice = 0 "Use guess values", choice = 208 "Steady pressure and enthalpy", choice=201 "Steady pressure", choice = 202 "Steady enthalpy"));
  parameter ClaRa.Basics.Units.EnthalpyMassSpecific h_start_TB[N_cv_TB]=fill(800e3, N_cv_TB) "Initial specific enthalpy for single tube" annotation (Dialog(tab="Tube Bundle (TB)", group="Initialisation"));
  parameter ClaRa.Basics.Units.Pressure p_start_TB[N_cv_TB]=fill(1e5, N_cv_TB) "Initial pressure" annotation (Dialog(tab="Tube Bundle (TB)", group="Initialisation"));
  parameter ClaRa.Basics.Units.MassFraction xi_start_TB[medium_TB.nc - 1]=medium_CT.xi_default "Initial composition" annotation (Dialog(tab="Tube Bundle (TB)", group="Initialisation"));
  parameter ClaRa.Basics.Units.EnthalpyMassSpecific h_nom_TB[N_cv_TB]=ones(N_cv_TB)*1e5 "Nominal specific enthalpy for single tube" annotation (Dialog(tab="Tube Bundle (TB)", group="Nominal Values"));
  parameter ClaRa.Basics.Units.Pressure p_nom_TB[N_cv_TB]=ones(N_cv_TB)*1e5 "Nominal pressure" annotation (Dialog(tab="Tube Bundle (TB)", group="Nominal Values"));
  parameter ClaRa.Basics.Units.MassFlowRate m_flow_nom_TB=100 "Nominal mass flow w.r.t. all parallel tubes" annotation (Dialog(tab="Tube Bundle (TB)", group="Nominal Values"));
  parameter ClaRa.Basics.Units.PressureDifference Delta_p_nom_TB=1e4 "Nominal pressure loss w.r.t. all parallel tubes" annotation (Dialog(tab="Tube Bundle (TB)", group="Nominal Values"));

/// CarrierTubes///

  parameter Boolean CTisCooled = true "True if carrier tubes are cooled (else omitted)" annotation (choices(checkBox=true), Dialog(tab="Carrier Tubes (CT)", group="Fundamental Definitions"));
  parameter TILMedia.VLEFluidTypes.BaseVLEFluid medium_CT=pipeFlow_CT.simCenter.fluid1 "CT medium model" annotation (choicesAllMatching, Dialog(enable=CTisCooled,
      tab="Carrier Tubes (CT)",
      group="Fundamental Definitions",groupImage="modelica://ClaRa/Resources/Images/ParameterDialog/CarrierTubesSketch.png"));
  replaceable model Material_CT = Basics.Media.Solids.Steel16Mo3 constrainedby TILMedia.SolidTypes.BaseSolid  "CT material" annotation (choicesAllMatching, Dialog(tab="Carrier Tubes (CT)", group="Fundamental Definitions", enable=CTisCooled));

  parameter Boolean frictionAtInlet_CT=false "True if pressure loss at inlet" annotation (choices(checkBox=true), Dialog(enable=CTisCooled,tab="Carrier Tubes (CT)", group="Fundamental Definitions"));
  parameter Boolean frictionAtOutlet_CT=false "True if pressure loss at outlet" annotation (choices(checkBox=true), Dialog(enable=CTisCooled,tab="Carrier Tubes (CT)", group="Fundamental Definitions"));
  replaceable model PressureLoss_CT = ClaRa.Basics.ControlVolumes.Fundamentals.PressureLoss.Generic_PL.LinearPressureLoss_L4 constrainedby ClaRa.Basics.ControlVolumes.Fundamentals.PressureLoss.PressureLossBaseVLE_L4 "Pressure loss model"  annotation (choicesAllMatching, Dialog(enable=CTisCooled,tab="Carrier Tubes (CT)", group="Fundamental Definitions"));
  replaceable model HeatTransfer_CT = ClaRa.Basics.ControlVolumes.Fundamentals.HeatTransport.Generic_HT.CharLine_L4 constrainedby ClaRa.Basics.ControlVolumes.Fundamentals.HeatTransport.HeatTransferBaseVLE_L4 "Heat transfer model"  annotation (choicesAllMatching, Dialog(enable=CTisCooled, tab="Carrier Tubes (CT)", group="Fundamental Definitions"));
  replaceable model MechanicalEquilibrium_CT = ClaRa.Basics.ControlVolumes.Fundamentals.SpacialDistribution.Homogeneous_L4 constrainedby ClaRa.Basics.ControlVolumes.Fundamentals.SpacialDistribution.MechanicalEquilibrium_L4 "Mechanic flow model"  annotation (choicesAllMatching, Dialog(enable=CTisCooled, tab="Carrier Tubes (CT)", group="Fundamental Definitions"));
  parameter ClaRa.Basics.Units.Length length_CT=abs(z_in_furnace - z_out_furnace) "Length of the pipe (one pass)" annotation (Dialog(enable=CTisCooled,tab="Carrier Tubes (CT)", group="Geometry"));
  parameter ClaRa.Basics.Units.Length diameter_o_CT=0.06 "Outner diameter of the pipe" annotation (Dialog(enable=CTisCooled,tab="Carrier Tubes (CT)", group="Geometry"));
  parameter ClaRa.Basics.Units.Length diameter_i_CT=0.05 "Inner diameter of the pipe" annotation (Dialog(enable=CTisCooled, tab="Carrier Tubes (CT)", group="Geometry"));
  parameter ClaRa.Basics.Units.Length z_in_CT=z_out_furnace "Height of inlet above ground" annotation (Dialog(enable=CTisCooled, tab="Carrier Tubes (CT)", group="Geometry"));
  parameter ClaRa.Basics.Units.Length z_out_CT=z_in_furnace "Height of outlet above ground" annotation (Dialog(enable=CTisCooled, tab="Carrier Tubes (CT)", group="Geometry"));
  parameter Integer N_tubes_CT=800 "Number Of parallel pipes" annotation (Dialog(enable=CTisCooled, tab="Carrier Tubes (CT)", group="Geometry"));
  parameter Integer N_passes_CT=1 "Number of passes of the tubes" annotation (Dialog(enable=CTisCooled, tab="Carrier Tubes (CT)", group="Geometry"));
  parameter Integer initOption_CT=0 "Type of initialisation" annotation (Dialog(enable=CTisCooled, tab="Carrier Tubes (CT)", group="Initialisation"), choices(choice = 0 "Use guess values", choice = 208 "Steady pressure and enthalpy", choice=201 "Steady pressure", choice = 202 "Steady enthalpy"));
  parameter ClaRa.Basics.Units.EnthalpyMassSpecific h_start_CT=2500e3 "Initial specific enthalpy for single tube" annotation (Dialog(enable=CTisCooled, tab="Carrier Tubes (CT)", group="Initialisation"));
  parameter ClaRa.Basics.Units.Pressure p_start_CT=100e5 "Initial pressure" annotation (Dialog(enable=CTisCooled, tab="Carrier Tubes (CT)", group="Initialisation"));
  parameter ClaRa.Basics.Units.MassFraction xi_start_CT[medium_CT.nc - 1] = medium_CT.xi_default "Initial composition" annotation (Dialog(enable=CTisCooled, tab="Carrier Tubes (CT)", group="Initialisation"));
  parameter ClaRa.Basics.Units.MassFlowRate m_flow_nom_CT=100 "Nominal mass flow w.r.t. all parallel tubes" annotation (Dialog(enable=CTisCooled, tab="Carrier Tubes (CT)", group="Nominal Values"));
  parameter ClaRa.Basics.Units.EnthalpyMassSpecific h_nom=1e5 "Nominal specific enthalpy for single tube" annotation (Dialog(enable=CTisCooled, tab="Carrier Tubes (CT)", group="Nominal Values"));
  parameter ClaRa.Basics.Units.Pressure p_nom_CT=1e5 "Nominal pressure" annotation (Dialog(enable=CTisCooled, tab="Carrier Tubes (CT)", group="Nominal Values"));
  parameter ClaRa.Basics.Units.PressureDifference Delta_p_nom_CT=1e4 "Nominal pressure loss w.r.t. all parallel tubes" annotation (Dialog(enable=CTisCooled, tab="Carrier Tubes (CT)", group="Nominal Values"));

  ///Summary and Visualisation ///
  parameter Boolean showExpertSummary=simCenter.showExpertSummary "True, if an extended summary shall be shown, else false" annotation (Dialog(tab="Summary and Visualisation"));
  parameter Boolean showData= true "True if data connectors shall be shown" annotation (Dialog(tab="Summary and Visualisation"));

  ClaRa.Components.VolumesValvesFittings.Pipes.PipeFlowVLE_L4_Simple pipeFlow_FTW(
    medium=medium_FTW,
    frictionAtInlet=frictionAtInlet_FTW,
    frictionAtOutlet=frictionAtOutlet_FTW,
    redeclare model PressureLoss = PressureLoss_FTW,
    redeclare model HeatTransfer = HeatTransfer_FTW,
    redeclare model MechanicalEquilibrium = MechanicalEquilibrium_FTW,
    p_nom=p_nom_FTW,
    h_nom=h_nom_FTW,
    m_flow_nom=m_flow_nom_FTW,
    Delta_p_nom=Delta_p_nom_FTW,
    initOption=initOption_FTW,
    h_start=h_start_FTW,
    p_start=p_start_FTW,
    xi_start=xi_start_FTW,
    showExpertSummary=showExpertSummary,
    showData=true,
    length=length_FTW,
    diameter_i=diameter_i_FTW,
    z_in=z_in_FTW,
    z_out=z_out_FTW,
    N_tubes=N_tubes_FTW,
    N_passes=N_passes_FTW,
    N_cv=N_cv_FTW,
    Delta_x=Delta_x_FTW) if FTWisCooled
                     annotation (Placement(transformation(
        extent={{-14,-5},{14,5}},
        rotation=90,
        origin={280,0})));
  ClaRa.Basics.ControlVolumes.SolidVolumes.CylindricalThinWall_L4 wall_FTW(
    redeclare model Material = Material_FTW,
    N_ax=N_cv_FTW,
    Delta_x=Delta_x_FTW,
    diameter_o=diameter_o_FTW,
    diameter_i=diameter_i_FTW,
    length=length_FTW*N_passes_FTW,
    N_tubes=N_tubes_FTW,
    T_start={TILMedia.VLEFluidFunctions.temperature_phxi(
        medium_FTW,
        p_start_FTW[i],
        h_start_FTW[i]) + 5 for i in 1:N_cv_FTW},
    suppressChattering="False")
                         if FTWisCooled
                     annotation (Placement(transformation(
        extent={{-14,5},{14,-5}},
        rotation=270,
        origin={240,0})));
  ClaRa.Components.Adapters.Scalar2VectorHeatPort adapt_FTW(N=N_cv_FTW) if FTWisCooled
                                                                    annotation (Placement(transformation(
        extent={{10,-10},{-10,10}},
        rotation=180,
        origin={188,0})));

  ClaRa.Basics.Interfaces.FluidPortOut outlet_FTW(Medium=medium_FTW) if FTWisCooled
                                                                 "Outlet port"               annotation (Placement(transformation(extent={{270,90},{290,110}}), iconTransformation(extent={{270,90},{290,110}})));
  ClaRa.Basics.Interfaces.FluidPortIn inlet_FTW(Medium=medium_FTW) if FTWisCooled
                                                               "Inlet port"               annotation (Placement(transformation(extent={{270,-110},{290,-90}}), iconTransformation(extent={{270,-110},{290,-90}})));
  ClaRa.Components.Furnace.FlameRoom.FlameRoomWithTubeBundle_L2_Dynamic flameRoom(
    fuelModel=fuelModel,
    slagType=slagType,
    flueGas=flueGas,
    slagTemperature_calculationType=slagTemperature_calculationType,
    T_slag=T_slag,
    redeclare model HeatTransfer_Wall = GasHeatTransfer_Wall,
    redeclare model HeatTransfer_Top = GasHeatTransfer_Top,
    redeclare model ParticleMigration = ParticleMigration,
    redeclare model Burning_time = Burning_time,
    redeclare model ReactionZone = ReactionZone,
    redeclare model Geometry = ClaRa.Basics.ControlVolumes.Fundamentals.Geometry.HollowBlockWithTubesAndCarrierTubes (
        CF_geo=fill(1, 3),
        N_inlet=1,
        N_outlet=1,
        z_in={z_in_furnace},
        z_out={z_out_furnace},
        height=abs(z_in_furnace - z_out_furnace),
        width=width_furnace,
        length=length_furnace,
        diameter_t=diameter_o_TB,
        N_tubes=N_tubes_TB,
        N_passes=N_passes_TB,
        N_ct=N_tubes_CT,
        d_ct=diameter_o_CT,
        Delta_z_par=Delta_z_par,
        Delta_z_ort=Delta_z_ort,
        staggeredAlignment=staggeredAlignment,
        N_rows=N_rows_TB,
        tubeOrientation=tubeOrientation_TB,
        flowOrientation=flowOrientation_furnace),
    redeclare model PressureLoss = GasPressureLoss,
    m_flow_nom=m_flow_nom_gas,
    p_start_flueGas_out=p_start_flueGas_out,
    T_start_flueGas_out=T_start_flueGas_out,
    T_top_initial=T_top_initial,
    xi_start_flueGas_out=xi_start_flueGas_out,
    redeclare model HeatTransfer_CarrierTubes = GasHeatTransfer_CarrierTubes,
    redeclare model HeatTransfer_TubeBundle = GasHeatTransfer_TubeBundle) annotation (Placement(transformation(extent={{-52,-10},{8,10}})));
  ClaRa.Basics.Interfaces.HeatPort_a heat_bottom annotation (Placement(transformation(extent={{-108,-110},{-88,-90}})));
  ClaRa.Basics.Interfaces.FuelSlagFlueGas_inlet inletFG(
    fuelModel=fuelModel,
    slagType=slagType,
    flueGas(Medium=flueGas))                            annotation (Placement(transformation(extent={{-210,-110},{-190,-90}})));
  ClaRa.Basics.Interfaces.FuelSlagFlueGas_outlet outletFG(
    fuelModel=fuelModel,
    slagType=slagType,
    flueGas(Medium=flueGas))                              annotation (Placement(transformation(extent={{-210,88},{-190,108}})));
  ClaRa.Basics.Interfaces.HeatPort_a heat_top annotation (Placement(transformation(extent={{-110,88},{-90,108}})));
  ClaRa.Basics.Interfaces.EyeOut eyeFTW if showData and FTWisCooled
                                        annotation (Placement(transformation(
        extent={{-5,-5},{5,5}},
        rotation=90,
        origin={240,104})));
  ClaRa.Basics.Interfaces.FluidPortOut outlet_CT(Medium=medium_CT) if CTisCooled
                                                                "Outlet port" annotation (Placement(transformation(extent={{10,-110},{30,-90}}), iconTransformation(extent={{-10,-110},{10,-90}})));
  ClaRa.Basics.Interfaces.FluidPortIn inlet_CT(Medium=medium_CT) if CTisCooled
                                                              "Inlet port" annotation (Placement(transformation(extent={{10,88},{30,108}}), iconTransformation(extent={{-10,90},{10,110}})));
  ClaRa.Basics.Interfaces.FluidPortIn inlet_TB(Medium=medium_TB) "Tub bundle inlet port"
                                                                                      annotation (Placement(transformation(extent={{-310,50},{-290,70}}), iconTransformation(extent={{-308,40},{-288,60}})));
  ClaRa.Basics.Interfaces.FluidPortOut outlet_TB(Medium=medium_TB) "Tube bundle outlet port"
                                                                                          annotation (Placement(transformation(extent={{-310,-60},{-290,-40}}), iconTransformation(extent={{-310,-60},{-290,-40}})));
  ClaRa.Components.Adapters.Scalar2VectorHeatPort adapt_TB(N=N_cv_TB)
                                                                   annotation (Placement(transformation(
        extent={{-10,-10},{10,10}},
        rotation=180,
        origin={-192,-20})));
  ClaRa.Basics.ControlVolumes.SolidVolumes.CylindricalThinWall_L4 wall_TB(
    redeclare model Material = Material_TB,
    N_ax=N_cv_TB,
    Delta_x=Delta_x_TB,
    diameter_o=diameter_o_TB,
    diameter_i=diameter_i_TB,
    length=length_TB*N_passes_TB,
    N_tubes=N_tubes_TB,
    T_start={TILMedia.VLEFluidFunctions.temperature_phxi(
        pipeFlow_TB.medium,
        p_start_TB[i],
        h_start_TB[i]) + 5 for i in 1:wall_TB.N_ax},
    suppressChattering="False")                  annotation (Placement(transformation(
        extent={{-14,-5},{14,5}},
        rotation=270,
        origin={-228,-20})));
  ClaRa.Components.VolumesValvesFittings.Pipes.PipeFlowVLE_L4_Simple pipeFlow_TB(
    medium=medium_TB,
    frictionAtInlet=frictionAtInlet_TB,
    frictionAtOutlet=frictionAtOutlet_TB,
    redeclare model PressureLoss = PressureLoss_TB,
    redeclare model HeatTransfer = HeatTransfer_TB,
    redeclare model MechanicalEquilibrium = MechanicalEquilibrium_TB,
    p_nom=p_nom_TB,
    h_nom=h_nom_TB,
    m_flow_nom=m_flow_nom_TB,
    Delta_p_nom=Delta_p_nom_TB,
    initOption=initOption_TB,
    h_start=h_start_TB,
    p_start=p_start_TB,
    xi_start=xi_start_TB,
    showExpertSummary=showExpertSummary,
    showData=true,
    length=length_TB,
    diameter_i=diameter_i_TB,
    z_in=z_in_TB,
    z_out=z_out_TB,
    N_tubes=N_tubes_TB,
    N_passes=N_passes_TB,
    N_cv=N_cv_TB,
    Delta_x=Delta_x_TB)
                     annotation (Placement(transformation(
        extent={{14,5},{-14,-5}},
        rotation=90,
        origin={-262,-20})));
  ClaRa.Basics.Interfaces.EyeOut eyeTB if showData
                                       annotation (Placement(transformation(extent={{-299,-85},{-309,-75}})));
  ClaRa.Basics.Interfaces.EyeOutGas eyeFG(medium=flueGas) if showData
                                          annotation (Placement(transformation(
        extent={{-6,-6},{6,6}},
        rotation=90,
        origin={-240,106})));
  ClaRa.Components.VolumesValvesFittings.Pipes.PipeFlowVLE_L2_Simple pipeFlow_CT(
    medium=medium_CT,
    frictionAtInlet=frictionAtInlet_CT,
    frictionAtOutlet=frictionAtOutlet_CT,
    redeclare model PressureLoss = PressureLoss_CT,
    redeclare model HeatTransfer = HeatTransfer_CT,
    redeclare model MechanicalEquilibrium = MechanicalEquilibrium_CT,
    p_nom={p_nom_CT},
    h_nom={h_nom},
    m_flow_nom=m_flow_nom_CT,
    Delta_p_nom=Delta_p_nom_CT,
    initOption=initOption_CT,
    h_start={h_start_CT},
    p_start={p_start_CT},
    xi_start=xi_start_CT,
    showExpertSummary=showExpertSummary,
    showData=true,
    length=length_CT,
    diameter_i=diameter_i_CT,
    z_in=z_in_CT,
    z_out=z_out_CT,
    N_tubes=N_tubes_CT,
    N_passes=N_passes_CT) if CTisCooled
                          annotation (Placement(transformation(
        extent={{-14,5},{14,-5}},
        rotation=270,
        origin={40,39})));
  ClaRa.Basics.ControlVolumes.SolidVolumes.CylindricalThinWall_L4 wall_CT(
    redeclare model Material = Material_CT,                               N_ax=1,
    diameter_o=diameter_o_CT,
    diameter_i=diameter_i_CT,
    length=length_CT*N_passes_CT,
    N_tubes=N_tubes_CT,
    T_start={TILMedia.VLEFluidFunctions.temperature_phxi(
        pipeFlow_CT.medium,
        p_start_CT,
        h_start_CT) + 5},
    suppressChattering="False") if CTisCooled                                     annotation (Placement(transformation(
        extent={{-14,5},{14,-5}},
        rotation=270,
        origin={16,39})));

  ClaRa.Basics.Interfaces.EyeOut eyeCT if showData and CTisCooled
                                       annotation (Placement(transformation(
        extent={{-5,-5},{5,5}},
        rotation=270,
        origin={60,-104})));
equation
  connect(pipeFlow_FTW.heat, wall_FTW.innerPhase) annotation (Line(
      points={{276,0},{245,0}},
      color={167,25,48},
      thickness=0.5));
  connect(wall_FTW.outerPhase, adapt_FTW.heatVector) annotation (Line(
      points={{235,0},{235,-6.66134e-16},{198,-6.66134e-16}},
      color={167,25,48},
      thickness=0.5));
  connect(flameRoom.heat_bottom, heat_bottom) annotation (Line(
      points={{-20,-10},{-20,-60},{-98,-60},{-98,-100}},
      color={167,25,48},
      thickness=0.5));
  connect(heat_top, flameRoom.heat_top) annotation (Line(
      points={{-100,98},{-100,40},{-20,40},{-20,10}},
      color={167,25,48},
      thickness=0.5));
  connect(adapt_FTW.heatScalar, flameRoom.heat_wall) annotation (Line(
      points={{178,1.77636e-15},{94,1.77636e-15},{94,0},{8,0}},
      color={167,25,48},
      thickness=0.5));
  connect(pipeFlow_FTW.inlet, inlet_FTW) annotation (Line(
      points={{280,-14},{280,-100}},
      color={0,131,169},
      pattern=LinePattern.Solid,
      thickness=0.5));
  connect(pipeFlow_FTW.outlet, outlet_FTW) annotation (Line(
      points={{280,14},{280,100}},
      color={0,131,169},
      pattern=LinePattern.Solid,
      thickness=0.5));
  connect(pipeFlow_FTW.eye, eyeFTW) annotation (Line(points={{283.4,14.6},{283.4,46},{240,46},{240,104}},                   color={190,190,190}), Text(
      string="%second",
      index=1,
      extent={{-3,6},{-3,6}},
      horizontalAlignment=TextAlignment.Right));
  connect(pipeFlow_TB.inlet, inlet_TB) annotation (Line(
      points={{-262,-6},{-262,60},{-300,60}},
      color={0,131,169},
      pattern=LinePattern.Solid,
      thickness=0.5));
  connect(pipeFlow_TB.outlet, outlet_TB) annotation (Line(
      points={{-262,-34},{-262,-50},{-300,-50}},
      color={0,131,169},
      pattern=LinePattern.Solid,
      thickness=0.5));
  connect(pipeFlow_TB.eye, eyeTB) annotation (Line(points={{-265.4,-34.6},{-265.4,-40},{-256,-40},{-256,-80},{-304,-80}}, color={190,190,190}));
  connect(flameRoom.heat_TubeBundle, adapt_TB.heatScalar) annotation (Line(
      points={{-2,-10},{-2,-20},{-182,-20}},
      color={167,25,48},
      thickness=0.5));
  connect(wall_TB.outerPhase, adapt_TB.heatVector) annotation (Line(
      points={{-223,-20},{-202,-20}},
      color={167,25,48},
      thickness=0.5));
  connect(wall_TB.innerPhase, pipeFlow_TB.heat) annotation (Line(
      points={{-233,-20},{-258,-20}},
      color={167,25,48},
      thickness=0.5));
  connect(flameRoom.eyeOut, eyeFG) annotation (Line(points={{-52,8},{-240,8},{-240,106}},                   color={190,190,190}));
  connect(wall_CT.innerPhase, pipeFlow_CT.heat) annotation (Line(
      points={{21,39},{36,39}},
      color={167,25,48},
      thickness=0.5));
  connect(wall_CT.outerPhase[1], flameRoom.heat_CarrierTubes) annotation (Line(
      points={{11,39},{-2,39},{-2,10}},
      color={167,25,48},
      thickness=0.5));
  connect(pipeFlow_CT.inlet, inlet_CT) annotation (Line(
      points={{40,53},{40,80},{20,80},{20,98}},
      color={0,131,169},
      pattern=LinePattern.Solid,
      thickness=0.5));
  connect(pipeFlow_CT.outlet, outlet_CT) annotation (Line(
      points={{40,25},{40,-48},{20,-48},{20,-100}},
      color={0,131,169},
      pattern=LinePattern.Solid,
      thickness=0.5));
  connect(flameRoom.inlet, inletFG) annotation (Line(
      points={{-38,-10},{-38,-40},{-200,-40},{-200,-100}},
      color={118,106,98},
      thickness=0.5));
  connect(flameRoom.outlet, outletFG) annotation (Line(
      points={{-38,10},{-38,22},{-200,22},{-200,98}},
      color={118,106,98},
      thickness=0.5));
  connect(pipeFlow_CT.eye, eyeCT) annotation (Line(points={{43.4,24.4},{43.4,-39.8},{60,-39.8},{60,-104}}, color={190,190,190}));

                                          //not FTWisCooled and not CTisCooled, FTWisCooled and not CTisCooled
  annotation (Documentation(info="<html>
<p><b>For detailed model documentation please consult the html-documentation shipped with ClaRa.</b> </p>
<p>&nbsp;</p>
<p><br><b><span style=\"font-size: 10pt;\">Authorship and Copyright Statement for original (initial) Contribution</span></b></p>
<p><b>Author:</b> </p>
<p>Friedrich Gottelt, Forschungszentrum f&uuml;r Verbrennungsmotoren und Thermodynamik Rostock GmbH, Copyright &copy; 2019-2020</p>
<p><a href=\"http://www.fvtr.de\">www.fvtr.de</a>
<p><b>References:</b> </p>
<p> For references please consult the html-documentation shipped with ClaRa. </p>
<p><b>Remarks:</b> </p>
<p>This component was developed by Forschungszentrum f&uuml;r Verbrennungsmotoren und Thermodynamik Rostock GmbH for industry projects in cooperation with Lausitz Energie Kraftwerke AG, Cottbus.</p>
<b>Acknowledgements:</b>
<p>This model contribution is sponsored by Lausitz Energie Kraftwerke AG.</p>

<p><a href=\"http://
<a href=\"http://www.leag.de\">www.leag.de</a> </p>
<p><b>CLA:</b> </p>
<p>The author(s) have agreed to ClaRa CLA, version 1.0. See <a href=\"https://claralib.com/pdf/CLA.pdf\">https://claralib.com/pdf/CLA.pdf</a></p>
<p>By agreeing to ClaRa CLA, version 1.0 the author has granted the ClaRa development team a permanent right to use and modify his initial contribution as well as to publish it or its modified versions under the 3-clause BSD License.</p>
<p>The ClaRa development team consists of the following partners:</p>
<p>TLK-Thermo GmbH (Braunschweig, Germany)</p>
<p>XRG Simulation GmbH (Hamburg, Germany).</p>
</html>",
        revisions="<html>
<body>
<table>
  <tr>
    <th style=\"text-align: left;\">Date</th>
    <th style=\"text-align: left;\">&nbsp;&nbsp;</th>
    <th style=\"text-align: left;\">Version</th>
    <th style=\"text-align: left;\">&nbsp;&nbsp;</th>
    <th style=\"text-align: left;\">Author</th>
    <th style=\"text-align: left;\">&nbsp;&nbsp;</th>
    <th style=\"text-align: left;\">Affiliation</th>
    <th style=\"text-align: left;\">&nbsp;&nbsp;</th>
    <th style=\"text-align: left;\">Changes</th>
  </tr>
  <tr>
    <td>2020-08-20</td>
    <td> </td>
    <td>ClaRa 1.6.0</td>
    <td> </td>
    <td>Friedrich Gottelt</td>
    <td> </td>
    <td>FVTR GmbH</td>
    <td> </td>
    <td>Initial version of model</td>
  </tr>
</table>
<p>Version means first ClaRa version where the applied change was published.</p>
</body>
</html>"),
         Icon(coordinateSystem(preserveAspectRatio=false), graphics={
        Bitmap(
          visible = FTWisCooled and CTisCooled,
          extent={{-298,-100},{302,100}},
          imageSource=""
               + "",
          fileName="modelica://ClaRa/Resources/Images/Components/FurnaceSlice.png"),
        Bitmap(
          visible = FTWisCooled and not CTisCooled,
          extent={{-300,-100},{300,100}},
          imageSource=""
               + "",
          fileName="modelica://ClaRa/Resources/Images/Components/FurnaceSliceUncooledcarrierTubes.png"),
        Bitmap(
          visible = not FTWisCooled and not CTisCooled,
          extent={{-300,-100},{300,100}},
          imageSource=""
               + "",
          fileName="modelica://ClaRa/Resources/Images/Components/FurnaceSliceUncooledWallsAndarrierTubes.png"),
        Rectangle(
          extent={{264,-74},{292,-92}},
          lineColor={28,108,200},
          pattern=LinePattern.None,
          fillColor={0,131,169},
          fillPattern=FillPattern.Solid,
          visible=frictionAtInlet_FTW and FTWisCooled),
        Rectangle(
          extent={{264,92},{292,74}},
          lineColor={28,108,200},
          fillColor={0,131,169},
          fillPattern=FillPattern.Solid,
          pattern=LinePattern.None,
          visible=frictionAtOutlet_FTW and FTWisCooled),
        Rectangle(
          extent={{-4,74},{4,90}},
          lineColor={28,108,200},
          pattern=LinePattern.None,
          fillColor={0,131,169},
          fillPattern=FillPattern.Solid,
          visible=frictionAtInlet_CT and CTisCooled),
        Rectangle(
          extent={{-4,-74},{4,-92}},
          lineColor={28,108,200},
          pattern=LinePattern.None,
          fillColor={0,131,169},
          fillPattern=FillPattern.Solid,
          visible=frictionAtOutlet_CT and CTisCooled),
        Rectangle(
          extent={{-274,54},{-294,46}},
          lineColor={28,108,200},
          pattern=LinePattern.None,
          fillColor={0,131,169},
          fillPattern=FillPattern.Solid,
          visible=frictionAtInlet_TB),
        Rectangle(
          extent={{-278,-46},{-294,-54}},
          lineColor={28,108,200},
          pattern=LinePattern.None,
          fillColor={0,131,169},
          fillPattern=FillPattern.Solid,
          visible=frictionAtOutlet_TB)}), Diagram(graphics,
                                                  coordinateSystem(preserveAspectRatio=false)));
end ConvectiveSlice_L4;
